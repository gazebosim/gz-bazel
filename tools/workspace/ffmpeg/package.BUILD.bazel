# -*- python -*-

licenses(["restricted"])  # GPL v2+

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "avcodec",
    hdrs = [
        "libavcodec/avcodec.h",
        "libavcodec/avdct.h",
        "libavcodec/avfft.h",
        "libavcodec/d3d11va.h",
        "libavcodec/dirac.h",
        "libavcodec/dv_profile.h",
        "libavcodec/dxva2.h",
        "libavcodec/jni.h",
        "libavcodec/mediacodec.h",
        "libavcodec/qsv.h",
        "libavcodec/vaapi.h",
        "libavcodec/vdpau.h",
        "libavcodec/version.h",
        "libavcodec/videotoolbox.h",
        "libavcodec/vorbis_parser.h",
        "libavcodec/xvmc.h",
    ],
    includes = ["."],
    linkopts = [
        "-lavcodec",
    ],
)

cc_library(
    name = "avdevice",
    hdrs = [
        "libavdevice/avdevice.h", 
        "libavdevice/version.h"
    ],
    includes = ["."],
    linkopts = [
        "-lavdevice",
    ],
)

cc_library(
    name = "avfilter",
    hdrs = [
        "libavfilter/avfilter.h", 
        "libavfilter/buffersink.h", 
        "libavfilter/buffersrc.h", 
        "libavfilter/version.h"
    ],
    includes = ["."],
    linkopts = [
        "-lavfilter",
    ],
)

cc_library(
    name = "avformat",
    hdrs = [
        "libavformat/avformat.h", 
        "libavformat/avio.h", 
        "libavformat/version.h", 
    ],
    includes = ["."],
    linkopts = [
        "-lavformat",
    ],
)

cc_library(
    name = "avutil",
    hdrs = [
        "libavutil/adler32.h",
        "libavutil/aes.h",
        "libavutil/aes_ctr.h",
        "libavutil/attributes.h",
        "libavutil/audio_fifo.h",
        "libavutil/avassert.h",
        "libavutil/avconfig.h",
        "libavutil/avstring.h",
        "libavutil/avutil.h",
        "libavutil/base64.h",
        "libavutil/blowfish.h",
        "libavutil/bprint.h",
        "libavutil/bswap.h",
        "libavutil/buffer.h",
        "libavutil/camellia.h",
        "libavutil/cast5.h",
        "libavutil/channel_layout.h",
        "libavutil/common.h",
        "libavutil/cpu.h",
        "libavutil/crc.h",
        "libavutil/des.h",
        "libavutil/dict.h",
        "libavutil/display.h",
        "libavutil/downmix_info.h",
        "libavutil/error.h",
        "libavutil/eval.h",
        "libavutil/ffversion.h",
        "libavutil/fifo.h",
        "libavutil/file.h",
        "libavutil/frame.h",
        "libavutil/hash.h",
        "libavutil/hmac.h",
        "libavutil/hwcontext.h",
        "libavutil/hwcontext_cuda.h",
        "libavutil/hwcontext_d3d11va.h",
        "libavutil/hwcontext_drm.h",
        "libavutil/hwcontext_dxva2.h",
        "libavutil/hwcontext_qsv.h",
        "libavutil/hwcontext_vaapi.h",
        "libavutil/hwcontext_vdpau.h",
        "libavutil/hwcontext_videotoolbox.h",
        "libavutil/imgutils.h",
        "libavutil/intfloat.h",
        "libavutil/intreadwrite.h",
        "libavutil/lfg.h",
        "libavutil/log.h",
        "libavutil/lzo.h",
        "libavutil/macros.h",
        "libavutil/mastering_display_metadata.h",
        "libavutil/mathematics.h",
        "libavutil/md5.h",
        "libavutil/mem.h",
        "libavutil/motion_vector.h",
        "libavutil/murmur3.h",
        "libavutil/opt.h",
        "libavutil/parseutils.h",
        "libavutil/pixdesc.h",
        "libavutil/pixelutils.h",
        "libavutil/pixfmt.h",
        "libavutil/random_seed.h",
        "libavutil/rational.h",
        "libavutil/rc4.h",
        "libavutil/replaygain.h",
        "libavutil/ripemd.h",
        "libavutil/samplefmt.h",
        "libavutil/sha.h",
        "libavutil/sha512.h",
        "libavutil/spherical.h",
        "libavutil/stereo3d.h",
        "libavutil/tea.h",
        "libavutil/threadmessage.h",
        "libavutil/time.h",
        "libavutil/timecode.h",
        "libavutil/timestamp.h",
        "libavutil/tree.h",
        "libavutil/twofish.h",
        "libavutil/version.h",
        "libavutil/xtea.h",
    ],
    includes = ["."],
    linkopts = [
        "-lavutil",
    ],
)

cc_library(
    name = "swresample",
    hdrs = [
        "libswresample/swresample.h", 
        "libswresample/version.h"
    ],
    includes = ["."],
    linkopts = [
        "-lswresample",
    ],
)

cc_library(
    name = "swscale",
    hdrs = [
        "libswscale/swscale.h", 
        "libswscale/version.h"
    ],
    includes = ["."],
    linkopts = [
        "-lswscale",
    ],
)
