import %workspace%/bazel/cc_toolchain/bazel.rc

# Disable native Python rules in Bazel versions before 4.0.
build --incompatible_load_python_rules_from_bzl=yes

# Default to an optimized build.
build -c opt

# Default build options.
build --force_pic
build --strip=never
build --strict_system_includes
build --workspace_status_command=./bazel/workspace/workspace-status.bash

build --fission=dbg
build --features=per_object_debug_info

# -- Options for explicitly using GCC.
common:gcc --repo_env=CC=gcc
common:gcc --repo_env=CXX=g++
build:gcc --action_env=CC=gcc
build:gcc --action_env=CXX=g++
build:gcc --host_action_env=CC=gcc
build:gcc --host_action_env=CXX=g++

build:asan --copt=-g
build:asan --copt=-fno-common
build:asan --copt=-fsanitize=address
build:asan --copt=-fsanitize-address-use-after-scope
build:asan --copt=-O0
build:asan --copt=-fno-omit-frame-pointer
build:asan --linkopt=-fsanitize=address
build:asan --linkopt=-fsanitize-address-use-after-scope
build:asan --test_env=ASAN_OPTIONS=detect_odr_violation=0
build:asan --test_env=LSAN_OPTIONS
build:asan --test_env=ASAN_SYMBOLIZER_PATH
build:asan --test_env=LSAN_SYMBOLIZER_PATH
