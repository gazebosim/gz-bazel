# -*- python -*-

load(":vars.bzl", "LIBDIR")

cc_library(
    name = "exception",
    hdrs = glob([
        "include/urdf_exception/*.h",
    ]),
    includes = ["include"],
    linkopts = [
        "-L" + LIBDIR,
        "-Wl,-rpath," + LIBDIR,
        "-lurdfdom_exception",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "model",
    hdrs = glob([
        "include/urdf_model/*.h",
    ]),
    includes = ["include"],
    linkopts = [
        "-L" + LIBDIR,
        "-Wl,-rpath," + LIBDIR,
        "-lurdfdom_model",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "model_state",
    hdrs = glob([
        "include/urdf_model_state/*.h",
    ]),
    includes = ["include"],
    linkopts = [
        "-L" + LIBDIR,
        "-Wl,-rpath," + LIBDIR,
        "-lurdfdom_model_state",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "sensor",
    hdrs = glob([
        "include/urdf_sensor/*.h",
    ]),
    includes = ["include"],
    linkopts = [
        "-L" + LIBDIR,
        "-Wl,-rpath," + LIBDIR,
        "-lurdfdom_sensor",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "world",
    hdrs = glob([
        "include/urdf_world/*.h",
    ]),
    includes = ["include"],
    linkopts = [
        "-L" + LIBDIR,
        "-Wl,-rpath," + LIBDIR,
        "-lurdfdom_world",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "urdfdom",
    hdrs = glob([
        "include/urdf_parser/*.h",
    ]),
    includes = ["include"],
    deps = [
        ":model",
        ":model_state",
        ":sensor",
        ":world",
    ],
    visibility = ["//visibility:public"],
)
